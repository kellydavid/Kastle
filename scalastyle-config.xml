<scalastyle>

 <check level="warning" class="org.scalastyle.scalariform.ReturnChecker" enabled="true"></check>
 <check level="warning" class="org.scalastyle.scalariform.ClassNamesChecker" enabled="true">
  <parameters>
   <parameter name="regex"><![CDATA[[A-Z][A-Za-z]*]]></parameter>
  </parameters>
 </check>
 <check level="warning" class="org.scalastyle.scalariform.ObjectNamesChecker" enabled="true">
  <parameters>
   <parameter name="regex"><![CDATA[[A-Z][A-Za-z]*]]></parameter>
  </parameters>
 </check>
 <check level="warning" class="org.scalastyle.scalariform.PackageObjectNamesChecker" enabled="true">
  <parameters>
   <parameter name="regex"><![CDATA[^[a-z][A-Za-z]*$]]></parameter>
  </parameters>
 </check>
 <check level="warning" class="org.scalastyle.scalariform.EqualsHashCodeChecker" enabled="true"></check>
 <check level="warning" class="org.scalastyle.scalariform.IllegalImportsChecker" enabled="true">
  <parameters>
   <parameter name="illegalImports"><![CDATA[sun._,java.awt._]]></parameter>
  </parameters>
 </check>
 <check level="warning" class="org.scalastyle.scalariform.ParameterNumberChecker" enabled="true">
  <parameters>
   <parameter name="maxParameters"><![CDATA[8]]></parameter>
  </parameters>
 </check>
 <check level="warning" class="org.scalastyle.scalariform.MagicNumberChecker" enabled="false">
  <parameters>
      <!-- I've added 10,20,30 just because they are so prevelent that they generate a lot of noise, not because they are ok -->
   <parameter name="ignore"><![CDATA[-1,0,1,2,3,10,20,30]]></parameter>
  </parameters>
 </check>
 <check level="warning" class="org.scalastyle.scalariform.NullChecker" enabled="true"></check>
 <check level="warning" class="org.scalastyle.scalariform.NoCloneChecker" enabled="true"></check>
 <check level="warning" class="org.scalastyle.scalariform.NoFinalizeChecker" enabled="true"></check>
 <check level="warning" class="org.scalastyle.scalariform.CovariantEqualsChecker" enabled="true"></check>
 <check level="warning" class="org.scalastyle.scalariform.StructuralTypeChecker" enabled="true"></check>
 <check level="warning" class="org.scalastyle.file.RegexChecker" enabled="true">
  <parameters>
   <parameter name="regex"><![CDATA[println]]></parameter>
      <customMessage>Use a logger instead of println</customMessage>
  </parameters>
 </check>

 <check level="warning" class="org.scalastyle.scalariform.NumberOfTypesChecker" enabled="true">
  <parameters>
   <parameter name="maxTypes"><![CDATA[30]]></parameter>
  </parameters>
 </check>
 <check level="warning" class="org.scalastyle.scalariform.CyclomaticComplexityChecker" enabled="true">
  <parameters>
   <parameter name="maximum"><![CDATA[13]]></parameter>
  </parameters>
 </check>
 <check level="warning" class="org.scalastyle.scalariform.UppercaseLChecker" enabled="true"></check>
 <check level="warning" class="org.scalastyle.scalariform.SimplifyBooleanExpressionChecker" enabled="true"></check>
 <check level="warning" class="org.scalastyle.scalariform.IfBraceChecker" enabled="true">
  <parameters>
   <parameter name="singleLineAllowed"><![CDATA[true]]></parameter>
   <parameter name="doubleLineAllowed"><![CDATA[false]]></parameter>
  </parameters>
 </check>
 <check level="warning" class="org.scalastyle.scalariform.MethodLengthChecker" enabled="true">
  <parameters>
   <parameter name="maxLength"><![CDATA[75]]></parameter>
  </parameters>
 </check>
 <check level="warning" class="org.scalastyle.scalariform.MethodNamesChecker" enabled="true">
  <parameters>
   <parameter name="regex"><![CDATA[^[a-z*][A-Za-z0-9_]*$]]></parameter>
  </parameters>
 </check>
 <check level="warning" class="org.scalastyle.scalariform.NumberOfMethodsInTypeChecker" enabled="true">
  <parameters>
   <parameter name="maxMethods"><![CDATA[30]]></parameter>
  </parameters>
 </check>
 <check level="warning" class="org.scalastyle.scalariform.PublicMethodsHaveTypeChecker" enabled="true"></check>

 <check level="warning" class="org.scalastyle.scalariform.ForBraceChecker" enabled="true"/>
 <check enabled="false" class="org.scalastyle.scalariform.ClassTypeParameterChecker" level="warning">
   <parameters>
      <parameter name="regex">^[A-Z_]$</parameter>
   </parameters>
 </check>
 <check enabled="true" class="org.scalastyle.scalariform.EmptyClassChecker" level="warning"/>

 <check enabled="false" class="org.scalastyle.scalariform.LowercasePatternMatchChecker" level="warning"/>

    <check enabled="true" class="org.scalastyle.scalariform.NotImplementedErrorUsage" level="warning"/>
    <check enabled="false" class="org.scalastyle.scalariform.PatternMatchAlignChecker" level="warning"/>
    <check enabled="true" class="org.scalastyle.scalariform.RedundantIfChecker" level="warning"/>
    <checker enabled="true" class="org.scalastyle.scalariform.TodoCommentChecker" level="warning">
        <parameters>
            <parameter default="TODO|FIXME" type="string" name="words"/>
        </parameters>
    </checker>
    <check enabled="false" class="org.scalastyle.scalariform.TokenChecker" level="warning">
        <parameters>
            <!-- original rule: <parameter name="regex">^[ai]sInstanceOf$</parameter> -->
            <parameter name="regex">^asInstanceOf$</parameter>
        </parameters>
        <customMessage>Avoid casting.</customMessage>
    </check>
    <check enabled="true" class="org.scalastyle.scalariform.VarFieldChecker" level="warning"/>
    <check enabled="true" class="org.scalastyle.scalariform.VarLocalChecker" level="warning"/>
    <check enabled="true" class="org.scalastyle.file.RegexChecker" level="warning">
        <parameters>
            <parameter name="regex">(?m)^\s*$(\r|)\n^\s*$(\r|)\n</parameter>
            <parameter name="line">false</parameter>
        </parameters>
        <customMessage>No double blank lines</customMessage>
    </check>
    <!--
    Below are all disabled, not because they are not good checks but because I feel we would be
    better to address the warning generated by the above errors first
    -->
    <check level="warning" class="org.scalastyle.file.FileTabChecker" enabled="false"></check>
    <check level="warning" class="org.scalastyle.file.WhitespaceEndOfLineChecker" enabled="false"></check>
    <check level="warning" class="org.scalastyle.file.FileLineLengthChecker" enabled="false">
    <parameters>
    <parameter name="maxLineLength"><![CDATA[160]]></parameter>
    <parameter name="tabSize"><![CDATA[4]]></parameter>
    </parameters>
    </check>
    <check level="warning" class="org.scalastyle.file.NewLineAtEofChecker" enabled="false"></check>
    <check level="warning" class="org.scalastyle.file.NoNewLineAtEofChecker" enabled="false"></check>
    <check enabled="false" class="org.scalastyle.file.IndentationChecker" level="warning">
      <parameters>
        <parameter name="tabSize">2</parameter>
        <parameter name="methodParamIndentSize">2</parameter>
        </parameters>
    </check>
    <check enabled="false" class="org.scalastyle.scalariform.FieldNamesChecker" level="warning">
        <parameters>
            <parameter name="regex">^[a-z\(][A-Za-z0-9,_]*\)?$</parameter>
        </parameters>
    </check>
    <check level="warning" class="org.scalastyle.file.FileLengthChecker" enabled="false">
        <parameters>
            <parameter name="maxFileLength"><![CDATA[800]]></parameter>
            </parameters>
    </check>
    <check level="warning" class="org.scalastyle.scalariform.SpacesAfterPlusChecker" enabled="false"></check>
    <check level="warning" class="org.scalastyle.scalariform.SpacesBeforePlusChecker" enabled="false"></check>
    <check level="warning" class="org.scalastyle.scalariform.NoWhitespaceBeforeLeftBracketChecker" enabled="false"></check>
    <check level="warning" class="org.scalastyle.scalariform.NoWhitespaceAfterLeftBracketChecker" enabled="false"></check>
    <check enabled="" class="org.scalastyle.scalariform.TokenChecker" level="warning">
        <parameters>
            <parameter name="regex">^(awaitResult|awaitAction)$</parameter>
        </parameters>
        <customMessage>Deprecated: Note that the awaitResult method will be deprecated in a future release</customMessage>
    </check>
    <check enabled="true" class="org.scalastyle.scalariform.TokenChecker" level="warning">
        <parameters>
            <parameter name="regex">^ServerError$</parameter>
        </parameters>
        <customMessage>We should not return a 500 error via Server error, as no sentry messages will be logged. Use Task.raiseError or helper like assert instead</customMessage>
    </check>
    <!-- Too many false positives -->
    <check enabled="false" class="org.scalastyle.file.RegexChecker" level="warning">
        <parameters>
            <parameter name="regex">\.get</parameter>
            <parameter name="line">false</parameter>
        </parameters>
        <customMessage>use fold or pattern matching on an Option</customMessage>
    </check>
    <check enabled="false" class="org.scalastyle.scalariform.MultipleStringLiteralsChecker" level="warning">
        <parameters>
            <parameter name="allowed">3</parameter>
        </parameters>
    </check>
</scalastyle>